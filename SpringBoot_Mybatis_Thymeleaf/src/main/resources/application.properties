
###### ' = ' 앞뒤로는 띄어쓰기 하지않기!

## server 설정
server.port=80

## Oracle 연결
#spring.datasource.hikari.username=user02
#spring.datasource.hikari.password=user02
#spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:xe
#spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver


## Maria DB 연결
spring.datasource.hikari.username=user01
spring.datasource.hikari.password=user01
spring.datasource.url=jdbc:mariadb://127.0.0.1:3306/user01
spring.datasource.hikari.driver-class-name=org.mariadb.jdbc.Driver


## Mybatis 설정 여러개라서 locations, 아니면 location
mybatis.mapper-locations=classpath:/database/**/*Mapper.xml
mybatis.config-location=classpath:/database/config/config.xml

## fileUpload
#### 1. form method="post", enctype="multipart/form-data"
#### 2. API는 내장, 따로 pom.xml에 추가하지 않음
#### 3. MultipartResolver 
#### (클라이언트에서 서버로 파일을 전송을 할 때, 이 파일을 하나로 보내는 것이아니고 잘라서 보내주는데 multipartresolver가 이것을 받아서 합쳐줌)

## multipart 사용 여부
spring.servlet.multipart.enabled=true
## 파일 당 최대 크기 설정
spring.servlet.multipart.max-file-size=10MB
## 총 파일 최대 크기 설정
spring.servlet.multipart.max-request-size=100MB
## 파일을 저장할 파일 시스템의 경로 설정도 가능!
##spring.servlet.multipart.location="c:/upload"

# Transaction 처리
# Service class가 부모 인터페이스 없이 단독 사용할 때 error 발생
# error 방지 하기 위한 설정
spring.aop.proxy-target-class=true


##파일 저장 경로 설정
board.notice.filePath = upload/notice/
board.qna.filePath = upload/qna/
member.filePath = upload/member


## Message
## message 폴더 하위에 message로 시작하는 모든 파일
spring.messages.basename=message/message
## Encoding
spring.messages.encoding=UTF-8
## message가 없는 코드일 경우 예외가 발생
## true  : 예외를 발생시키지 않고 코드 자체를 출력
## false : 예외를 발생시킴
## 기본은 false : 대부분의 true/false 해당
spring.messages.use-code-as-default-message=true
## 파일이 변경될 때, 얼마마다 한 번씩 감지될 지 설정(초단위)
## = properties 파일의 변경을 감지할 시간 간격을 지정(초단위)
spring.messages.cache-duration=60

####
## 1. code not found
##	- properties 파일에 해당 code(키)가 없는 경우
##	- properties 파일이 없는 경우
##	- 방문기록 지우기
## 2. spring.messages.cache-duration 에러
##	- duration 부분을 주석 처리


